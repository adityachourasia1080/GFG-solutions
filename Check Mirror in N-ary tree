class Solution {
  public:
    int checkMirrorTree(int n, int e, int A[], int arr[]) {
        // code here
        unordered_map<int,stack<int>> mp;
        for (int i=1;i<2*e;i=i+2)  mp[A[i-1]].push(A[i]);
        for (int i=1;i<2*e;i=i+2)
        {
            int index= arr[i-1];
            if (mp.find(index)!=mp.end())
            {
                if (mp[index].top()!=arr[i])  return 0;
                else  mp[index].pop();
                
            }
            else   return 0;
        }
        return 1;
        
    }
};
