class Solution{
    public:
    class cmp
    {
       public:
       bool operator()(const pair<int,int> a,const pair<int,int> b)
       {
           if (a.first==b.first)  return a.second<b.second;
           
           return a.first<b.first;
       }
    };
    vector<int> Kclosest(vector<int>arr, int n, int x, int k) 
    { 
        // Your code goes here 
        priority_queue<pair<int,int>,vector<pair<int,int>>,cmp>maxh;
        
        vector<int> ans;
        for (int i=0;i<n;i++)
        {
            maxh.push({abs(arr[i]-x),arr[i]});
            if (maxh.size()>k)  maxh.pop();
        }
        
        while(!maxh.empty())
        {
            pair<int,int> p= maxh.top(); maxh.pop();
            ans.push_back(p.second);
        }
        sort(ans.begin(),ans.end());
        return ans;
    }  
};
